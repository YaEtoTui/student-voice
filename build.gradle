plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = projectGroup
version = projectVersion

ext {
    springBootVersion = '3.0.1'
    swaggerVersion = '2.6.0'
    springSecurityVersion = '3.1.1.RELEASE'
    jsonWebTokenVersion = '0.11.5'
    poiVersion = '5.2.3'
    queryDslVersion = '5.1.0'
    springCloudVersion = '2022.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileJava.options.encoding = 'UTF-8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            include '**/*.html', '**/*.xml', '**/*.yml', '**/*.sql'
        }
        resources {
            srcDir 'src/main/resources/static'
            include '**/*'
            srcDir 'build/resources/main/static'
        }
    }
}

dependencies {

    /* PostgreSQL */
    runtimeOnly("org.postgresql:postgresql",
            "org.liquibase:liquibase-core")

    implementation "org.seleniumhq.selenium:selenium-java:4.19.1"
    implementation "org.apache.httpcomponents.client5:httpclient5"
    implementation "org.projectlombok:lombok"
    implementation "com.google.zxing:core:3.5.3"
    implementation "com.google.zxing:javase:3.5.3"
    implementation "com.opencsv:opencsv:5.9"
    implementation "ru.homyakin:iuliia-java:1.8"

    implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'

    /* Excel */
    implementation "org.apache.poi:poi-ooxml:$poiVersion"

    /* JWT */
    implementation "io.jsonwebtoken:jjwt-api:$jsonWebTokenVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jsonWebTokenVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jsonWebTokenVersion"

    implementation group: 'com.querydsl', name: 'querydsl-core', version: queryDslVersion
    implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"


    /* Swagger_3.0 */
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$swaggerVersion"

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springBootVersion

    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6:$springSecurityVersion"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    annotationProcessor(
            "org.projectlombok:lombok",
            "com.querydsl:querydsl-apt:$queryDslVersion:jakarta",
            "jakarta.persistence:jakarta.persistence-api:3.1.0",
            "org.springframework.boot:spring-boot-configuration-processor"
    )

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
